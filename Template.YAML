# Author
translation:
  source: "Name and link to social media"
  text_direction: "rtl" # Set to "rtl" for right-to-left languages

# Navigation
nav:
  episodes: "قسمت ها"
  about: "درباره"
  ep1: "چرا به HTTPS نیاز داریم؟"
  ep2: "کلیدها"
  ep3: "The handshake (دست دهی)"
  ep4: "تفاوت های HTTPS، SSL، TLS"
  ep5: "مرجع صدور گواهی دیجیتال"
  social: "یک گربه اجتماعی باشید"
  more_comics: "کمیک های بیشتری بخوانید"
  continue_reading: "به خواندن ادامه دهید"

# Home page
home:
  title: "HTTPS چگونه کار می کند"
  certificat_cta: "شروع به خواندن کنید"
  subtitle: "HTTPS چگونه کار می کند. در یک کمیک!"
  p1: "آیا تا به حال فکر کرده اید که چرا یک نماد قفل سبز در نوار URL مرورگر شما ظاهر می شود؟ و چرا مهم است؟ ما هم این کار را کردیم و این کمیک برای شماست!"
  p2: "ماجراهای Certificat، Browserbird و Compugter را دنبال کنید زیرا توضیح می دهند که چرا HTTPS برای آینده وب بسیار مهم است و چگونه همه با هم کار می کنند"
  p3: "اجازه ندهید خرچنگ های بد شما را درگیر کنند (منظور ما در کمیک را خواهید فهمید). HTTPS و اینکه چرا برای حفظ حریم خصوصی شما ضروری است را بشناسید"
  small_cta: "همین الان شروع به خواندن کنید"

# Episode fragments for /episodes
fragment:
  ep1: "خواندن را از اینجا شروع کنید. اگر فقط یک چیز است که از این کمیک حذف می کنید، بگذارید این یکی باشد"
  ep2: "برای درک نحوه عملکرد HTTPS، باید بدانید رمزگذاری کلید متقارن و نامتقارن چگونه کار می کند. به نظر کلمات بزرگی می رسد، اما واقعاً اینطور نیست"
  ep3: "وقتی به یک سایت امن HTTP مرور می‌کنید، مرورگر شما و سروری که در آن متصل می‌شود، یک دست دادن مخفی دارند. ما این را تجزیه می کنیم و آن را به دنیای واقعی می آوریم تا بتوانید با دست دادن مخفیانه به دوستان خود سلام کنید"
  ep4: "به راحتی می توان HTTPS، SSL و TLS را اشتباه گرفت. ما اغلب از این اصطلاحات به جای هم استفاده می کنیم. بیایید در مورد هر یک از آنها با کمی تاریخچه صحبت کنیم"
  ep5: "چه کار می کنند؟ چه نیازی به آنها داریم؟ چگونه گواهینامه ها را تایید می کنند؟ در این فصل آخر کمیک باید به سوالات زیادی پاسخ داد!"

# Episodes
ep1:
  1: "چرا به HTTPS نیاز داریم؟"
  2: "ما به 3 دلیل به HTTPS نیاز داریم"
  3: "حریم خصوصی، یکپارچگی و هویت"
  4: "بیایید ابتدا در مورد حریم خصوصی صحبت کنیم"
  5: "من از دوستانم به عنوان مثال استفاده می کنم"
  6: "no text"
  7: "من در حال ارسال پیام به Browserbird هستم"
  8: "وای نه! پیام رمزگذاری نشده!"
  9: "خرچنگ در حال گوش دادن به ارتباط است و پیام را ضبط می کند"
  10: "به طور بالقوه استفاده از آن برای شر"
  11: "حریم خصوصی به این معنی است که هیچ کس نمی تواند پیام های شما را شنود کند"
  12: "خرچنگ بد. بد"
  13: "وقتی به وب سایتی بدون HTTPS مراجعه می کنید، ممکن است رمز عبور شما را شنود کنم"
  14: "قفل سبز روی نوار URL مرورگر به شما می گوید که هیچ خرچنگی روی شانه شما مراقب نیست"
  15: "دلیل شماره 2: یکپارچگی"
  16: "مثال در راه است!"
  17: "من در حال ارسال پیام دیگری به Browserbird بدون رمزگذاری هستم"
  18: "اما قبل از اینکه به Browserbird برسد، پیام را قطع می کنم"
  19: "من پیام را به روز می کنم تا چیزهای بدی در مورد Browserbird بگویم و آن را برای او ارسال می کنم"
  20: "چرا كامپيوتر چنين چيزهايي را در مورد من مي‌گويد؟"
  21: "no text"
  22: "این اغلب به عنوان حمله مرد میانی نامیده می شود"
  23: "و حملات خرچنگ میانی بدترین هستند"
  24: "خرچنگ بد. بد"
  25: "یکپارچگی به این معنی است که پیام در مسیر رسیدن به مقصد دستکاری نشود"
  26: "من مطمئن می شوم که ارتباط شما دستکاری نشده است"
  27: "دلیل شماره 3: هویت"
  28: "زمان مثال!"
  29: "هویت به این معنی است که من می توانم بررسی کنم که این پیام از طرف Compugter آمده است"
  30: "امضای دیجیتالی متصل به پیام می تواند فرستنده را شناسایی کند"
  31: "امضای دیجیتال متن پایانی ایمیل شما نیست. هر کسی می تواند آن را کپی کند ;)"
  32: "و هنگامی که در حال مرور وب هستید، هویت به این معنی است که سایتی که بازدید می کنید واقعاً همان سایتی است که شما فکر می کنید"
  33: "HTTPS، از طریق گواهی‌های SSL، تضمین می‌کند که دقیقاً با گیرنده‌ای که انتظار دارید متصل هستید"
  34: "This SSL certificate is valid and has been issued by a legitimate Certificate Authority. You are good to go."
  35: "به زودی در مورد گواهینامه های SSL و مقامات گواهی بیشتر صحبت خواهیم کرد، پس با ما همراه باشید"
  36: "به طور خلاصه، حریم خصوصی، یکپارچگی و هویت دلایل اصلی اهمیت HTTPS هستند"
  next: "بعدی در HowHTTPS.works"
  next_teaser: "اکنون که دلیل آن را می دانیم، گام بعدی درک رمزگذاری متقارن و نامتقارن است. کلمات بزرگ، اما مفاهیم آسان"

ep2:
  1: "کلیدها"
  2: "HTTPS به راهی برای ارائه حریم خصوصی، یکپارچگی و هویت در وب نیاز دارد"
  3: "و این مکانیسم "رمزگذاری" نامیده می شود"
  4-1: "بیایید در مورد دو نوع الگوریتم رمزگذاری صحبت کنیم"
  4-2: "حالا من آن کلیدها را کجا گذاشتم؟"
  5-1: "بالاخره!"
  5-2: "بیایید با الگوریتم کلید متقارن شروع کنیم"
  6: "در این سناریو، تنها یک کلید برای رمزگذاری و رمزگشایی یک پیام وجود دارد"
  7: "قبل از ارسال پیام به BrowserBird، پیام را با یک کلید رمزگذاری می کنم"
  8: "می توانید به فرآیند رمزگذاری مانند قرار دادن پیام در جعبه و قفل کردن جعبه با یک کلید فکر کنید"
  9: "فقط شخصی که یک کپی از کلید دارد می تواند جعبه را باز کند و پیام را بخواند"
  10: "این تضمین می کند که جعبه تا زمانی که کلید مناسب به دست شخصی نرسد باز نمی شود"
  11: "وقتی Browserbird جعبه را دریافت می کند، از کلید خود برای باز کردن آن و خواندن پیام استفاده می کند"
  12: "مهم است که کلید خصوصی باشد. شما نباید کلید را در متن ساده به اشتراک بگذارید یا آن را با جعبه ارسال کنید. یا آن را در جیب خود نگه دارید"
  13: "به یاد داشته باشید، هر کسی که کلید را در دست داشته باشد می تواند جعبه را باز کند"
  14-1: "استفاده از جعبه تصویری خوبی برای درک رمزگذاری است، اما واقعاً آن را بیش از حد ساده می کند"
  14-2: "بیا درستش کنیم!"
  15: "در واقع، هرکسی که بدون کلید به پیام نگاه می کند، فقط متن مزخرف را می بیند"
  16: "این متن توسط یک الگوریتم رمزگذاری تولید شده است"
  17: "که روشی فانتزی برای گفتن این است که متن از طریق یک سری مراحل درهم ریخته شده است"
  18: "چندین بار تغییر شکل داد و پخش شد. هر بار مبهم کردن پیام بیشتر"
  19: "برای رمزگشایی یک پیام، فقط باید همان مراحل را اعمال کنیم، اما به ترتیب معکوس"
  20: "کلید رمزگذاری با پیام مخلوط شده است، بنابراین حتی اگر الگوریتم رمزگذاری را بدانید، بدون کلید، پیام همچنان مزخرف است"
  21: "در اینجا یک کلید ممکن است شبیه باشد"
  22: "یکی از مشکلات اصلی کلیدهای متقارن این است که به سختی به اشتراک گذاشته می شوند"
  23: "شما باید در نحوه توزیع کلید بسیار مراقب باشید"
  24: "این ما را به کلیدهای نامتقارن می رساند"
  25: "تفاوت اصلی با کلیدهای متقارن این است که شما 2 کلید دارید"
  26: "یک کلید عمومی و دیگری خصوصی است. آنها جفت هستند و با هم کار می کنند"
  27-1: "کلید عمومی خود را با هر کسی به اشتراک بگذارید. آن را به صورت متن ساده بفرستید، استیکر بسازید، تتو کنید. هرچی بخوای! عمومی است!""
  27-2: "من تتو را دوست دارم."
  28: "Compugter در حال ارسال کلید عمومی خود به BrowserBird است"
  29: "و اکنون من پیامی برای آنها ارسال می کنم که آن را با کلید عمومی خود رمزگذاری می کند"
  30: "به عبارت دیگر، BrowserBird پیام را در یک جعبه قرار می دهد و آن را با کلید عمومی Compugter قفل می کند"
  31: "اکنون می توانم از کلید خصوصی خود برای خواندن پیام استفاده کنم"
  32: "این ایده اصلی است. فقط کلید خصوصی می تواند جعبه قفل شده با جفت کلید عمومی را باز کند"
  33: "من از کلید عمومی Browserbird برای ارسال پیام دیگری به آنها استفاده می کنم"
  34: "این نه تنها برای حفظ حریم خصوصی، بلکه برای شناسایی نیز عالی است زیرا ما مطمئن هستیم که فقط صاحب 2 کلید می تواند پیام را باز کند"
  35: "در مرحله بعد، به بررسی نقش کلیدهای متقارن و نامتقارن در هنگام اتصال به یک سایت با SSL خواهیم پرداخت"
  next: "بعدی در HowHTTPS.works"
  next_teaser: "هورا برای رمزگذاری! بعدش چی؟ دست دادن مخفی بین مرورگر خود و اینترنت را بیاموزید که اطلاعات شما را ایمن و بی خطر می کند"

ep3:
  1: "The handshake (دست دهی)"
  2: "هنگامی که شروع به خواندن این کمیک کردید، مرورگر شما یک قفل سبز رنگ در نوار آدرس نمایش داد"
  3: "چطور اتفاق افتاد؟"
  4: "مرورگر شما با سرور ما، جایی که این کمیک میزبانی می شود، ارتباط برقرار کرد و هر دو یک اتصال امن برای انتقال پیام برقرار کردند"
  5: "اما ابتدا باید در مورد نحوه برقراری ارتباط امن به توافق برسند"
  6: "اگر مذاکره موفقیت آمیز نباشد، مرورگر شما با نشان دادن خطا یا هشدار به شما اطلاع می دهد"
  7: "اگر توافقی حاصل شود، مرورگر شما خوشحال می شود که یک قفل سبز را در نوار آدرس نمایش دهد"
  8: "این فرآیند، مذاکره بین مرورگر و سرور، "دست دادن" نامیده می شود"
  9: "خیلی سریع اتفاق می افتد. ما می خواهیم به شما نشان دهیم که چگونه کار می کند"
  10: "Browserbird مرورگر شما خواهد بود"
  11: "Compugter سرور ما خواهد بود"
  12: "بچه ها بردارید!"
  13: "آماده؟ در اینجا "دست دادن" در حرکت آهسته به نظر می رسد"
  14: "Left clap"
  15: "Right clap"
  16: "Vertical shaka"
  17: "Shaka horizontal rotation"
  18: "Tickles"
  19: "انجام شد"
  20: "بیایید دوباره این کار را انجام دهیم، اما سریعتر"
  21: "Left clap - Right clap - Shaka - Shaka rotation - Tickles."
  22: "دوباره"
  23: "بسه!"
  24: "بیایید آن را تجزیه کنیم. گام به گام"
  25: "Step One: Left clap. AKA Client Hello."
  26: "Iلیستی از نسخه های SSL / TLS و الگوریتم های رمزگذاری را که می توانم با آنها کار کنم به Compugter ارسال کنم"
  27: "یک کلمه فانتزی برای لیست الگوریتم رمزگذاری "مجموعه رمزگذاری" است"
  28: "بنابراین شما می توانید مانند یک حرفه ای در سر میز شام صدا کنید."
  29: "پروتکل های SSL و TLS در طول زمان تکامل یافته اند، به زودی در مورد آن بیشتر صحبت خواهیم کرد"
  30: "و سپس منتظر پاسخ از Compugter هستم"
  31: "Step two: Right clap. AKA Server Hello."
  32: "من بهترین نسخه SSL / TLS و الگوریتم رمزگذاری را از بین مواردی که browserbird برای من ارسال کرده و بر اساس ترجیحاتم انتخاب می کنم"
  33: "من با گواهینامه خود، که شامل کلید عمومی من است، پاسخ می‌دهم تا بتوانند تأیید کنند که من کی هستم"
  34: "Step three: Vertical shaka. AKA Client Key Exchange."
  35: "من گواهی کامپیوتر را بررسی می کنم تا از قانونی بودن آنها مطمئن شوم"
  36: "من یک «کلید پیش از اصلی» تولید می‌کنم تا بتوانیم بعداً وقتی یک کلید منحصربه‌فرد تولید می‌کنیم، از آن استفاده کنیم"
  37: "من آن کلید اصلی را با کلید عمومی کامپیوتر رمزگذاری می کنم و سپس آن را برای او ارسال می کنم"
  38: "Step four: Shaka horizontal rotation. AKA Change Cipher spec."
  39: "من از کلید خصوصی خود برای رمزگشایی از کلید اصلی استفاده می کنم"
  40: "تاکنون تمامی ارتباطات بین آنها در فضای باز بوده است. آنها هیچ پیامی را ایمن نکرده اند"
  41: "آنها از کلیدهای نامتقارن (کلیدهای عمومی و خصوصی) برای رمزگذاری کلید اصلی استفاده کردند تا کسی نتواند آن را جاسوسی کند"
  42: "اکنون هر دو همان "راز مشترک" را ایجاد می کنند که قرار است از آن به عنوان یک کلید متقارن استفاده کنند"
  43: "و browserbird یک آزمایش ارسال می کند"
  44: "Compugter پاسخ می دهد"
  45: "Step five: Tickles. AKA Everything is now secured."
  46: "اکنون تمام داده هایی که بین Browserbird و Compugter رفت و آمد می کنند، برای بقیه جلسه ایمن شده است"
  47: "رمز عبور، جزئیات کارت اعتباری، همه چیز"
  48: "آسونه آره؟"
  49: "دفعه بعد که به طور ایمن از طریق HTTPS به یک وب سایت متصل می شوید، به مرورگر خود shaka بدهید زیرا از دست دادن مخفی آنها مطلع هستید"
  next: "بعدی در HowHTTPS.works"
  next_teaser: "HTTPS، SSL، TLS، اوه من! من فقط یک سوپ مخفف برای ناهار خوردم. منظورشون چیه؟ آیا آنها چیزهای مشابهی هستند؟"

ep4:
  1: "The differences between HTTPS, SSL, and TLS"
  2: "It's easy to confuse these terms and use them interchangeably."
  3: "Let's look into each one and see how they differ."
  4: "What's HTTPS?"
  5: "HTTPS is the secured version of HTTP: HyperText Transfer Protocol."
  6: "HTTP is the protocol used by your browser and web servers to communicate and exchange information."
  7: "When that exchange of data is encrypted with SSL/TLS, then we call it HTTPS. The 'S' stands for Secure."
  8: "OMG! Wait! Did I say SSL/TLS! Why?"
  9: "Because it's the precise way to talk about SSL and TLS."
  10: "SSL stands for 'Secure Sockets Layer'. A protocol created by Netscape."
  11: "SSL is a dinosaur by Internet standards. The first version was never released and version 2 launched with the browser Netscape 1.1 in 1995."
  12: "Later that year Netscape released version 3 because version 2 had some major security problems."
  13: "We were all happy cats until 1999. Browser wars between Netscape and Microsoft, the need for standards, and Britney Spears - '...Baby One More Time' changed the world as we know it. Fur-ever."
  14: "Oops, I did it again."
  15: "Netscape gave control of SSL protocol to the IETF: Internet Engineering Task Force."
  16: "Before 1999 ended, IETF released TLS version 1.0 (Which was really SSL 3.1)."
  17: "SSL was renamed to TLS: Transport Layer Security. Creating confusion and chaos still to this day."
  18: "Thanks 1999."
  19: "TLS 1.0 took off and version 1.1 was released in 2006."
  20: "A couple of years later, in 2008, TLS 1.2 was released to address a few flaws and exploits."
  21: "However, it's not until 2013 that browsers start to catch up and add support for TLS 1.2."
  22: "To add to the confusion, SSL 3.0 was officially deprecated in 2015."
  23-1: "TLS 1.3 was approved in march 2018 and your browser might already support it."
  23-2: "Click here to check the current TLS version for your browser."
  23-3: "But come back to finish the story."
  24: "TLS 1.3 brings great security improvements and removes old weaker features."
  25: "No worries if your browser doesn't support it yet. TLS 1.2 is still the recommended version if you are reading this in Spring/Summer 2020."
  26: "Let's recap."
  27: "HTTPS is just the HTTP protocol but with data encryption using SSL/TLS."
  28: "SSL is the original and now deprecated protocol created at Netscape in the mid 90s."
  29: "TLS is the new protocol for secured encryption on the web maintained by IETF."
  30: "And now you know the hiss-tory."
  next: "Next on HowHTTPS.works..."
  next_teaser: "Certificates and Certificate authorities: What Do They Know? Do They Know Things?? Let's Find Out!"

ep5:
  1: "Certificate Authorities"
  2: "A certificate authority (CA) is a third-party organization with 3 main objectives:"
  3: "1. Issuing certificates."
  4: "2. Confirming the identity of the certificate owner."
  5: "3. Providing proof that the certificate is valid."
  6: "You might have heard of Symantec, Comodo, or Let's Encrypt, among others."
  7: "Becoming a CA is an intense task of security requirements and audits."
  8: "You need to be trusted to be accepted into a root store."
  9: "A root store is basically a database of trusted CAs."
  10: "Apple, Windows, and Mozilla run their own root stores that they pre-install in your computer or device."
  11: "Which certificate should you buy? You have basically 3 flavors."
  12: "Domain validated. The certificate just verifies the domain name, and nothing else. You probably need this one."
  13: "Organization validated. The certificate requires the validation and manual verification of the organization behind the certificate."
  14: "Extended validation. The certificate requires an exhaustive verification of the business."
  15: "All valid certificates result in the browser displaying a secure badge in the browser bar. EV certificates generally display the company name as well."
  16: "But how do certificates get validated?"
  17: "When a CA issues a certificate, they sign the certificate with their root certificate pre-installed in the root store."
  18: "Most of the time it's an intermediate certificate signed with a root certificate."
  19: "If a cat-astrophy would occur and the root certificate is compromised, it's easier to revoke the intermediate certificates, since the root certificates are installed on each device."
  20: "Let's walk through how a certificate is validated. The process is based on a 'chain of trust'."
  21: "Your browser connects to a site via HTTPS and downloads the certificate."
  22: "The certificate is not a root certificate."
  23: "Your browser downloads the certificate that was used to sign the certificate on the site."
  24: "But this certificate is still not the root certificate."
  25: "Your browser once more looks up the certificate that signed the intermediate certificate."
  26: "It's the root certificate! Yay!"
  27: "The entire certificate chain is trusted, and thus the site certificate is trusted as well."
  28: "In the event that the last certificate is not a root certificate, and there are no more certificates to download, the chain is untrusted."
  29: "But why use a certificate authority when you can self-sign your certificates?"
  30: "A self-signed certificate provides the same level of encryption as one generated by an authority."
  31: "No crabs can spy on your data."
  32: "And there is no charge to self-sign your certificates!"
  33: "Yes, but almost every browser checks that the certificate is issued by a trusted authority."
  34: "As such visitors are warned that the certificate cannot be trusted."
  35: "Self-signed certificates can be useful for testing, and intranets, but you should avoid using them on public sites."
  36: "Self-signed certificates can be forged. Basically, they say 'Trust me, it's me, I promise!'."
  37: "A trusted certificate says: 'Trust me, an authority verified me'."
  38: "Talking about trust. Thank you for trusting us through this story."
  39: "Unfortunately, it is coming to an end."
  40: "We hope you enjoyed this comic!"
  41: "See you soon!"
  end-title: "Hey, you did it!"
  end-p1: "You finished the comic! Thanks from the bottom of of our cat paws for spending some of your day reading about HTTPS."
  end-p2: "We propose three activities to distract you from the fact that there is not another episode to read."
  option-1: "Take the quiz"
  option-1-p: "To make it up to you, you can test your brand hot knowledge of HTTPS in a quiz. Yes, that's right. We even send you a certificate of completion if you score high enough."
  option-2: "Vent on social networks"
  option-2-p: "The human thing to do. If you want to put more pressure on us to make more comics, here are a few examples to get us to the edge of our seats."
  option-3: "Visit DNSimple"
  option-3-p: "If you enjoyed the comic, and need an SSL certificate to secure your site, or a rock solid and easy-to-use DNS (not our words), or a brand new fancy domain, have a look at us."
  post-data: "P.S. If you want to suggest a new episode (please no, because we'll have to update this page) or give us feedback about the existing ones,"
  post-data-link: "we are all cat hears"
